var search_data = {"index":{"searchIndex":["table","column()","count()","headers()","new()","select()","sort()","table()","tally()","to_date()","to_i()","to_s()","write_file()"],"longSearchIndex":["table","table#column()","table#count()","table#headers()","table::new()","table#select()","table#sort()","table#table()","table#tally()","table#to_date()","table#to_i()","table#to_s()","table#write_file()"],"info":[["Table","","Table.html","",""],["column","Table","Table.html#method-i-column","(colname)","<p>Return a copy of a column from the table, identified by column name Params:\n<p>colname &mdash; <code>String</code> to identify …\n\n"],["count","Table","Table.html#method-i-count","(colname, value)","<p>Counts the number of instances of a particular string, given a column name,\nand returns an integer &gt;= …\n"],["headers","Table","Table.html#method-i-headers","()","<p>Return an array of the Table headers Params: none\n"],["new","Table","Table.html#method-c-new","(filename=nil)","<p>Instantiate a Table object using a tab-delimited file Params:\n<p>filename &mdash; <code>String</code> to identify the name of …\n\n"],["select","Table","Table.html#method-i-select","(colname, condition=\"==true\")","<p>Select rows from the table that match a condition for a given column.\nReturns an instance of Table with …\n"],["sort","Table","Table.html#method-i-sort","(colname)","<p>Sort a Table, given a column name.  Uses default sorting precedence. \nRecognizes Date and Integer values. …\n"],["table","Table","Table.html#method-i-table","()","<p>Return an internal representation of the Table object Params: none\n"],["tally","Table","Table.html#method-i-tally","(colname)","<p>Count instances in a particular field/column and return hash of the\nresults. Returns nil if the column …\n"],["to_date","Table","Table.html#method-i-to_date","(colname)","<p>Converts a Column in the table to a <code>Date</code> type. Returns nil if\nthe column is not found. Params:\n<p>colname … &mdash; "],["to_i","Table","Table.html#method-i-to_i","(colname)","<p>Converts a Column in the table to an <code>Integer</code> type. Returns nil\nif the column is not found. Params:\n<p>colname … &mdash; "],["to_s","Table","Table.html#method-i-to_s","()","<p>Converts a Table object to a tab-delimited string. Params: none\n"],["write_file","Table","Table.html#method-i-write_file","(filename)","<p>Write a representation of the Table object to a file (tab delimited).\nParams:\n<p>filename &mdash; <code>String</code> to identify …\n\n"]]}}